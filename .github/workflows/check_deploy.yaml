name: Check & deploy

on:
  push:
    branches:
      - master
  pull_request:

env:
  TERRAFORM_PATH: "src/infrastructure"
  AZURE_FUNCTIONAPP_NAME: func-python-mch01
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "src/functions"

jobs:
  check-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Export Azure credentials
        run: |
          azCreds='${{ secrets.AZURE_CREDENTIALS }}'
          echo '::set-env name=ARM_CLIENT_ID::'$(echo "$azCreds" | jq -r '.clientId')
          echo '::set-env name=ARM_CLIENT_SECRET::'$(echo "$azCreds" | jq -r '.clientSecret')
          echo '::set-env name=ARM_SUBSCRIPTION_ID::'$(echo "$azCreds" | jq -r '.subscriptionId')
          echo '::set-env name=ARM_TENANT_ID::'$(echo "$azCreds" | jq -r '.tenantId')
          echo '::set-env name=ARM_ACCESS_KEY::'${{ secrets.TF_STATE_STORAGE_ACCESS_KEY }}

      - name: Terraform Init
        id: init
        run: terraform init ${{ env.TERRAFORM_PATH }}

      - name: Terraform Format
        id: fmt-check
        run: terraform fmt -check ${{ env.TERRAFORM_PATH }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color ${{ env.TERRAFORM_PATH }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color ${{ env.TERRAFORM_PATH }}

      - uses: actions/github-script@v2
        if: github.event_name == 'pull_request'
        env:
          STDOUT: "```${{ steps.plan.outputs.stdout }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.STDOUT
            })

      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy
          pip install flake8
      - name: Lint with flake8
        id: flake8
        run: |
          flake8 ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} --count --exit-zero --max-complexity=10 --statistics
      - name: Validate with mypy
        id: mypy
        run: |
          mypy ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve ${{ env.TERRAFORM_PATH }}

      - uses: azure/login@v1.1
        name: "Azure Login"
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Deploy Azure Functions"
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
