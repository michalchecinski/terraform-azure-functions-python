name: PR check

on:
  pull_request:
    branches:
      - master

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/infrastructure
    steps:

      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt-check
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: export ARM_ACCESS_KEY
        run: export ARM_ACCESS_KEY=${{ secrets.TF_STATE_STORAGE_ACCESS_KEY }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          STDOUT: "```${{ steps.plan.outputs.stdout }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.STDOUT
            })

  python-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/functions
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Validate with mypy
        run: |
          mypy .

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          STDOUT: "```${{ steps.plan.outputs.stdout }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.STDOUT
            })
